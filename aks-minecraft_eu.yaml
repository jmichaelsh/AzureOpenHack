kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: azurefile
provisioner: kubernetes.io/azure-file
mountOptions:
  - dir_mode=0777
  - file_mode=0777
  - uid=1000
  - gid=1000
parameters:
  skuName: Standard_LRS
  storageAccount: openhackitauteam2europa
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: system:azure-cloud-provider
rules:
- apiGroups: ['']
  resources: ['secrets']
  verbs:     ['get','create']
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: system:azure-cloud-provider
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:azure-cloud-provider
subjects:
- kind: ServiceAccount
  name: persistent-volume-binder
  namespace: kube-system
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: disco
spec:
  accessModes:
  - ReadWriteMany
  storageClassName: azurefile
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: azure-minecraft-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: azure-minecraft-server
  template:
    metadata:
      labels:
        app: azure-minecraft-server
    spec:
      containers:
      - name: azure-minecraft-server
        image: openhack/minecraft-server:2.0
        volumeMounts:
        - mountPath: "/data"
          name: volume
        env:
        - name: EULA
          value: "TRUE"
        ports:
        - containerPort: 25565
          name: client
        - containerPort: 25575
          name: remote
      volumes:
        - name: volume
          persistentVolumeClaim:
            claimName: disco
---
apiVersion: v1
kind: Service
metadata:
  name: azure-minecraft-server
spec:
  type: LoadBalancer
  ports:
  - port: 25565
    name: client
  - port: 25575
    name: remote
  selector:
    app: azure-minecraft-server
